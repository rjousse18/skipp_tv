name: Run Python Script

on:
  push:
    branches:
      - main # Déclenche l'action uniquement sur la branche "main" (modifiable selon vos besoins)

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3 # Clone le dépôt

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9" # Version de Python souhaitée

      - name: Run Script
        run: |
          python convert_to_sql.py  # Remplacez "your_script.py" par le nom de votre script

      - name: Debug tags
        run: |
          echo "All tags in the repository:"
          git tag
          echo "Latest tag based on git describe:"
          git describe --tags $(git rev-list --tags --max-count=1) || echo "No tags found"

      - name: Get next version
        id: get_next_version
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "0.0.0")
          echo "Latest tag: $LATEST_TAG"

          IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"

          PATCH=$((PATCH + 1))
          NEXT_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "Next version: $NEXT_VERSION"

          # Sortie de la version
          echo "next_version=$NEXT_VERSION" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.next_version }}
          release_name: Release ${{ env.next_version }}
          body: "This release contains the generated file."
          draft: false
          prerelease: false

      - name: Upload File to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./insert_data.sql # Chemin vers le fichier généré
          asset_name: database.sql
          asset_content_type: application/sql # Type MIME du fichier
